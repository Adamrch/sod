syntax = "proto3";
package proto;

option go_package = "./proto";
import "common.proto";

message ShamanTalents {
	// Elemental
	int32 convection = 1;
	int32 concussion = 2;
	int32 earths_grasp = 3;
	int32 elemental_warding = 4;
	int32 call_of_flame = 5;
	bool elemental_focus = 6;
	int32 reverberation = 7;
	int32 call_of_thunder = 8;
	int32 improved_fire_totems = 9;
	int32 eye_of_the_storm = 10;
	int32 elemental_devastation = 11;
	int32 storm_reach = 12;
	bool elemental_fury = 13;
	int32 lightning_mastery = 14;
	bool elemental_mastery = 15;

	// Enhancement
	int32 ancestral_knowledge = 16;
	int32 shield_specialization = 17;
	int32 guardian_totems = 18;
	int32 thundering_strikes = 19;
	int32 improved_ghost_wolf = 20;
	int32 improved_lightning_shield = 21;
	int32 enhancing_totems = 22;
	bool two_handed_axes_and_maces = 23;
	int32 anticipation = 24;
	int32 flurry = 25;
	int32 toughness = 26;
	int32 improved_weapon_totems = 27;
	int32 elemental_weapons = 28;
	bool parry = 29;
	int32 weapon_mastery = 30;
	bool stormstrike = 31;

	// Restoration
	int32 improved_healing_wave = 32;
	int32 tidal_focus = 33;
	int32 improved_reincarnation = 34;
	int32 ancestral_healing = 35;
	int32 totemic_focus = 36;
	int32 natures_guidance = 37;
	int32 healing_focus = 38;
	bool totemic_mastery = 39;
	int32 healing_grace = 40;
	int32 restorative_totems = 41;
	int32 tidal_mastery = 42;
	int32 healing_way = 43;
	bool natures_swiftness = 44;
	int32 purification = 45;
	bool mana_tide_totem = 46;
}
enum ShamanMajorGlyph {
	ShamanMajorGlyphNone = 0;
	GlyphOfChainHeal = 41517;
	GlyphOfChainLightning = 41518;
	GlyphOfEarthShield = 45775;
	GlyphOfEarthlivingWeapon = 41527;
	GlyphOfElementalMastery = 41552;
	GlyphOfFeralSpirit = 45771;
	GlyphOfFireElementalTotem = 41529;
	GlyphOfFireNova = 41530;
	GlyphOfFlameShock = 41531;
	GlyphOfFlametongueWeapon = 41532;
	GlyphOfFrostShock = 41547;
	GlyphOfHealingStreamTotem = 41533;
	GlyphOfHealingWave = 41534;
	GlyphOfHex = 45777;
	GlyphOfLava = 41524;
	GlyphOfLavaLash = 41540;
	GlyphOfLesserHealingWave = 41535;
	GlyphOfLightningBolt = 41536;
	GlyphOfLightningShield = 41537;
	GlyphOfManaTide = 41538;
	GlyphOfRiptide = 45772;
	GlyphOfShocking = 41526;
	GlyphOfStoneclawTotem = 45778;
	GlyphOfStormstrike = 41539;
	GlyphOfThunder = 45770;
	GlyphOfTotemOfWrath = 45776;
	GlyphOfWaterMastery = 41541;
	GlyphOfWindfuryWeapon = 41542;
}
enum ShamanMinorGlyph {
	ShamanMinorGlyphNone = 0;
	GlyphOfAstralRecall = 43381;
	GlyphOfGhostWolf = 43725;
	GlyphOfRenewedLife = 43385;
	GlyphOfThunderstorm = 44923;
	GlyphOfWaterBreathing = 43344;
	GlyphOfWaterShield = 43386;
	GlyphOfWaterWalking = 43388;
}

enum EarthTotem {
	NoEarthTotem = 0;
	StrengthOfEarthTotem = 1;
	TremorTotem = 2;
	StoneskinTotem = 3;
}

enum AirTotem {
	NoAirTotem = 0;
	WindfuryTotem = 2;
	WrathOfAirTotem = 3;
}

enum FireTotem {
	NoFireTotem = 0;
	MagmaTotem = 1;
	SearingTotem = 2;
	TotemOfWrath = 3;
	FlametongueTotem = 4;
}

enum WaterTotem {
	NoWaterTotem = 0;
	ManaSpringTotem = 1;
	HealingStreamTotem = 2;
}

message ShamanTotems {
	// Not used here, but used by APL
	enum TotemType {
		TypeUnknown = 0;
		Earth = 1;
		Air = 2;
		Fire = 3;
		Water = 4;
	}

	EarthTotem earth = 1;
	AirTotem air = 2;
	FireTotem fire = 3;
	WaterTotem water = 4;

	// If set, will use mana tide when appropriate.
	bool use_mana_tide = 5;

	// If set, will use fire elemental totem at the start and revert to regular
	// fire totems when it expires.
	bool use_fire_elemental = 6;

	// If set, will revert to regular fire totems when fire elemental goes OOM,
	// instead of waiting the full 2 minutes.
	bool recall_fire_elemental_on_oom = 7;

	// If set, any time a 2-minute totem is about to expire, will recall and
	// replace all totems.
	bool recall_totems = 8;

	// If set will use fire totems as an MCD instead of manually controlling when to place them.
	bool use_fire_mcd = 9;

	// Bonus spell power for fire elemental snapshotting.
	int32 bonus_spellpower = 10;

	// Snapshot fire elemental using Tier 10 4 set bonus.
	bool enh_tier_ten_bonus = 11;
}

enum ShamanShield {
	NoShield = 0;
	WaterShield = 1;
	LightningShield = 2;
}

enum ShamanImbue {
    NoImbue = 0;
    WindfuryWeapon = 1;
    FlametongueWeapon = 2;
    FlametongueWeaponDownrank = 3;
    FrostbrandWeapon = 4;
}

enum ShamanSyncType {
  NoSync = 0;
  SyncMainhandOffhandSwings = 1;
  DelayOffhandSwings = 2;
	Auto = 3;
}

message ElementalShaman {
	message Rotation {
		// Deprecated as of 2023-08-29
		ShamanTotems totems = 3 [deprecated = true];

		enum RotationType {
			Unknown = 0;
			Adaptive = 1;
			Manual = 2;
		}
		RotationType type = 1;
		bool in_thunderstorm_range = 2 [deprecated = true];

		// These options are used for the manual rotation.
		bool use_fire_nova = 4;
		double fn_min_mana_per = 9;
		bool use_chain_lightning = 5;
		bool use_cl_only_gap = 11;
		double cl_min_mana_per = 10;
		bool overwrite_flameshock = 6;
		bool always_crit_lvb = 7;
		bool use_thunderstorm = 8;
		double lvb_fs_wait_ms = 12;
		
		enum BloodlustUse {
			UnsetBloodlust = 0;
			UseBloodlust = 1;
			NoBloodlust = 2;
		}
		BloodlustUse bloodlust = 13;
	}

	message Options {
		ShamanShield shield = 1;
		bool bloodlust = 2 [deprecated = true];
		ShamanTotems totems = 3;
		
		enum ThunderstormRange {
			UnsetTSRange = 0;
			TSInRange = 1;
			TSOutofRange = 2;
		}
		ThunderstormRange thunderstormRange = 4;
	}

	Rotation rotation = 1;
	Options options = 3;
}

message EnhancementShaman {
	message Rotation {
		// Deprecated as of 2023-08-29
		ShamanTotems totems = 1 [deprecated = true];
		
		enum RotationType {
			Unknown = 0;
			Priority = 1;
			Custom = 2;
		}
		RotationType rotation_type = 2;

		//TODO: add spells here for custom rotation (if necessary?)
		enum CustomRotationSpell {
			NoSpell = 0;
			Stormstrike = 1;
			StormstrikeDebuffMissing = 2; //find a way to differentiate tooltips for this, lightning bolt weaves, and downranked flametongue
			LightningBolt = 3;
			LightningBoltWeave = 4;
			FlameShock = 5;
			EarthShock = 6;
			LavaLash = 7;
			LavaBurst = 8;
			LightningShield = 9;
			FireNova = 10;
			ChainLightning = 11;
			FrostShock = 12;
			MagmaTotem = 13;
			LightningBoltDelayedWeave = 14;
		}
		CustomRotation custom_rotation = 3;

		//weaving options
		bool lavaburst_weave = 4;
		bool lightningbolt_weave = 5;
		int32 maelstromweapon_min_stack = 6;
		double auto_weave_delay = 7;

		//other general rotation config options
		double firenova_mana_threshold = 8;
		double shamanistic_rage_mana_threshold = 9;

		enum PrimaryShock {
			None = 0;
			Earth = 1;
			Frost = 2;
		}

		bool weave_flame_shock = 10;
		PrimaryShock primary_shock = 11;
		int32 flame_shock_clip_ticks = 12;
		double delay_gcd_weave = 13;
		ItemSwap item_swap = 14;
		bool enable_item_swap = 15;

		enum BloodlustUse {
			UnsetBloodlust = 0;
			UseBloodlust = 1;
			NoBloodlust = 2;
		}
		BloodlustUse bloodlust = 16;
	}

	message Options {
		ShamanShield shield = 1;
		bool bloodlust = 2 [deprecated = true];
		ShamanSyncType sync_type = 3;
		ShamanImbue imbue_mh = 4;
		ShamanImbue imbue_oh = 5;
		ShamanTotems totems = 6;
	}

	Rotation rotation = 1;
	Options options = 3;
}

enum ShamanHealSpell {
	AutoHeal = 0;
	HealingWave = 1;
	LesserHealingWave = 2;
	ChainHeal = 3;
}

message RestorationShaman {
	message Rotation {
		// Deprecated as of 2023-08-29
		ShamanTotems totems = 1 [deprecated = true];
		bool use_earth_shield = 2;
		ShamanHealSpell primary_heal = 3;
		bool use_riptide = 4;

		enum BloodlustUse {
			UnsetBloodlust = 0;
			UseBloodlust = 1;
			NoBloodlust = 2;
		}
		BloodlustUse bloodlust = 5;
	}

	message Options {
		ShamanShield shield = 1;
		bool bloodlust = 2 [deprecated = true];
		ShamanImbue imbue_mh = 4;
		int32 earth_shield_p_p_m = 5;
		ShamanTotems totems = 6;
	}

	Rotation rotation = 1;
	Options options = 3;
}
